/// <reference types="react" />
import { BoxProps } from './Box'
export declare const Column: import('styled-components').StyledComponent<
  'div',
  any,
  import('styled-system').BackgroundProps<
    import('styled-system').TLengthStyledSystem
  > &
    import('styled-system').ColorProps &
    import('styled-system').FlexboxProps &
    import('styled-system').LayoutProps &
    import('styled-system').OpacityProps &
    import('styled-system').PositionProps &
    import('styled-system').SpaceProps<
      import('styled-system').TLengthStyledSystem
    > &
    import('styled-system').TypographyProps &
    import('react').HTMLAttributes<any> &
    Pick<
      BoxProps,
      | 'background'
      | 'backgroundImage'
      | 'backgroundSize'
      | 'backgroundPosition'
      | 'backgroundRepeat'
      | 'color'
      | 'bg'
      | 'backgroundColor'
      | 'alignItems'
      | 'alignContent'
      | 'justifyItems'
      | 'justifyContent'
      | 'flexWrap'
      | 'flexDirection'
      | 'flex'
      | 'flexGrow'
      | 'flexShrink'
      | 'flexBasis'
      | 'justifySelf'
      | 'alignSelf'
      | 'order'
      | 'height'
      | 'minWidth'
      | 'minHeight'
      | 'maxWidth'
      | 'maxHeight'
      | 'display'
      | 'verticalAlign'
      | 'size'
      | 'opacity'
      | 'position'
      | 'zIndex'
      | 'top'
      | 'right'
      | 'bottom'
      | 'left'
      | 'm'
      | 'margin'
      | 'mt'
      | 'marginTop'
      | 'mr'
      | 'marginRight'
      | 'mb'
      | 'marginBottom'
      | 'ml'
      | 'marginLeft'
      | 'mx'
      | 'marginX'
      | 'my'
      | 'marginY'
      | 'p'
      | 'padding'
      | 'pt'
      | 'paddingTop'
      | 'pr'
      | 'paddingRight'
      | 'pb'
      | 'paddingBottom'
      | 'pl'
      | 'paddingLeft'
      | 'px'
      | 'paddingX'
      | 'py'
      | 'paddingY'
      | 'fontFamily'
      | 'fontSize'
      | 'fontWeight'
      | 'lineHeight'
      | 'letterSpacing'
      | 'fontStyle'
      | 'textAlign'
      | 'defaultChecked'
      | 'defaultValue'
      | 'suppressContentEditableWarning'
      | 'suppressHydrationWarning'
      | 'accessKey'
      | 'className'
      | 'contentEditable'
      | 'contextMenu'
      | 'dir'
      | 'draggable'
      | 'hidden'
      | 'id'
      | 'lang'
      | 'placeholder'
      | 'slot'
      | 'spellCheck'
      | 'style'
      | 'tabIndex'
      | 'title'
      | 'inputMode'
      | 'is'
      | 'radioGroup'
      | 'role'
      | 'about'
      | 'datatype'
      | 'inlist'
      | 'prefix'
      | 'property'
      | 'resource'
      | 'typeof'
      | 'vocab'
      | 'autoCapitalize'
      | 'autoCorrect'
      | 'autoSave'
      | 'itemProp'
      | 'itemScope'
      | 'itemType'
      | 'itemID'
      | 'itemRef'
      | 'results'
      | 'security'
      | 'unselectable'
      | 'aria-activedescendant'
      | 'aria-atomic'
      | 'aria-autocomplete'
      | 'aria-busy'
      | 'aria-checked'
      | 'aria-colcount'
      | 'aria-colindex'
      | 'aria-colspan'
      | 'aria-controls'
      | 'aria-current'
      | 'aria-describedby'
      | 'aria-details'
      | 'aria-disabled'
      | 'aria-dropeffect'
      | 'aria-errormessage'
      | 'aria-expanded'
      | 'aria-flowto'
      | 'aria-grabbed'
      | 'aria-haspopup'
      | 'aria-hidden'
      | 'aria-invalid'
      | 'aria-keyshortcuts'
      | 'aria-label'
      | 'aria-labelledby'
      | 'aria-level'
      | 'aria-live'
      | 'aria-modal'
      | 'aria-multiline'
      | 'aria-multiselectable'
      | 'aria-orientation'
      | 'aria-owns'
      | 'aria-placeholder'
      | 'aria-posinset'
      | 'aria-pressed'
      | 'aria-readonly'
      | 'aria-relevant'
      | 'aria-required'
      | 'aria-roledescription'
      | 'aria-rowcount'
      | 'aria-rowindex'
      | 'aria-rowspan'
      | 'aria-selected'
      | 'aria-setsize'
      | 'aria-sort'
      | 'aria-valuemax'
      | 'aria-valuemin'
      | 'aria-valuenow'
      | 'aria-valuetext'
      | 'children'
      | 'dangerouslySetInnerHTML'
      | 'onCopy'
      | 'onCopyCapture'
      | 'onCut'
      | 'onCutCapture'
      | 'onPaste'
      | 'onPasteCapture'
      | 'onCompositionEnd'
      | 'onCompositionEndCapture'
      | 'onCompositionStart'
      | 'onCompositionStartCapture'
      | 'onCompositionUpdate'
      | 'onCompositionUpdateCapture'
      | 'onFocus'
      | 'onFocusCapture'
      | 'onBlur'
      | 'onBlurCapture'
      | 'onChange'
      | 'onChangeCapture'
      | 'onBeforeInput'
      | 'onBeforeInputCapture'
      | 'onInput'
      | 'onInputCapture'
      | 'onReset'
      | 'onResetCapture'
      | 'onSubmit'
      | 'onSubmitCapture'
      | 'onInvalid'
      | 'onInvalidCapture'
      | 'onLoad'
      | 'onLoadCapture'
      | 'onError'
      | 'onErrorCapture'
      | 'onKeyDown'
      | 'onKeyDownCapture'
      | 'onKeyPress'
      | 'onKeyPressCapture'
      | 'onKeyUp'
      | 'onKeyUpCapture'
      | 'onAbort'
      | 'onAbortCapture'
      | 'onCanPlay'
      | 'onCanPlayCapture'
      | 'onCanPlayThrough'
      | 'onCanPlayThroughCapture'
      | 'onDurationChange'
      | 'onDurationChangeCapture'
      | 'onEmptied'
      | 'onEmptiedCapture'
      | 'onEncrypted'
      | 'onEncryptedCapture'
      | 'onEnded'
      | 'onEndedCapture'
      | 'onLoadedData'
      | 'onLoadedDataCapture'
      | 'onLoadedMetadata'
      | 'onLoadedMetadataCapture'
      | 'onLoadStart'
      | 'onLoadStartCapture'
      | 'onPause'
      | 'onPauseCapture'
      | 'onPlay'
      | 'onPlayCapture'
      | 'onPlaying'
      | 'onPlayingCapture'
      | 'onProgress'
      | 'onProgressCapture'
      | 'onRateChange'
      | 'onRateChangeCapture'
      | 'onSeeked'
      | 'onSeekedCapture'
      | 'onSeeking'
      | 'onSeekingCapture'
      | 'onStalled'
      | 'onStalledCapture'
      | 'onSuspend'
      | 'onSuspendCapture'
      | 'onTimeUpdate'
      | 'onTimeUpdateCapture'
      | 'onVolumeChange'
      | 'onVolumeChangeCapture'
      | 'onWaiting'
      | 'onWaitingCapture'
      | 'onAuxClick'
      | 'onAuxClickCapture'
      | 'onClick'
      | 'onClickCapture'
      | 'onContextMenu'
      | 'onContextMenuCapture'
      | 'onDoubleClick'
      | 'onDoubleClickCapture'
      | 'onDrag'
      | 'onDragCapture'
      | 'onDragEnd'
      | 'onDragEndCapture'
      | 'onDragEnter'
      | 'onDragEnterCapture'
      | 'onDragExit'
      | 'onDragExitCapture'
      | 'onDragLeave'
      | 'onDragLeaveCapture'
      | 'onDragOver'
      | 'onDragOverCapture'
      | 'onDragStart'
      | 'onDragStartCapture'
      | 'onDrop'
      | 'onDropCapture'
      | 'onMouseDown'
      | 'onMouseDownCapture'
      | 'onMouseEnter'
      | 'onMouseLeave'
      | 'onMouseMove'
      | 'onMouseMoveCapture'
      | 'onMouseOut'
      | 'onMouseOutCapture'
      | 'onMouseOver'
      | 'onMouseOverCapture'
      | 'onMouseUp'
      | 'onMouseUpCapture'
      | 'onSelect'
      | 'onSelectCapture'
      | 'onTouchCancel'
      | 'onTouchCancelCapture'
      | 'onTouchEnd'
      | 'onTouchEndCapture'
      | 'onTouchMove'
      | 'onTouchMoveCapture'
      | 'onTouchStart'
      | 'onTouchStartCapture'
      | 'onPointerDown'
      | 'onPointerDownCapture'
      | 'onPointerMove'
      | 'onPointerMoveCapture'
      | 'onPointerUp'
      | 'onPointerUpCapture'
      | 'onPointerCancel'
      | 'onPointerCancelCapture'
      | 'onPointerEnter'
      | 'onPointerEnterCapture'
      | 'onPointerLeave'
      | 'onPointerLeaveCapture'
      | 'onPointerOver'
      | 'onPointerOverCapture'
      | 'onPointerOut'
      | 'onPointerOutCapture'
      | 'onGotPointerCapture'
      | 'onGotPointerCaptureCapture'
      | 'onLostPointerCapture'
      | 'onLostPointerCaptureCapture'
      | 'onScroll'
      | 'onScrollCapture'
      | 'onWheel'
      | 'onWheelCapture'
      | 'onAnimationStart'
      | 'onAnimationStartCapture'
      | 'onAnimationEnd'
      | 'onAnimationEndCapture'
      | 'onAnimationIteration'
      | 'onAnimationIterationCapture'
      | 'onTransitionEnd'
      | 'onTransitionEndCapture'
    > & {
      col?: number | (string | number | null)[] | undefined
      inset?: number | (string | number | null)[] | undefined
    },
  never
>
