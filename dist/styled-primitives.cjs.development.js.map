{"version":3,"file":"styled-primitives.cjs.development.js","sources":["../src/Box.tsx","../src/Card.tsx","../src/Column.tsx","../src/Contain.tsx","../src/Flex.tsx","../src/Text.tsx","../src/Heading.tsx","../src/Space.tsx","../src/Row.tsx","../src/grid.ts"],"sourcesContent":["import { HTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport {\n  background,\n  BackgroundProps,\n  color,\n  ColorProps,\n  compose,\n  flexbox,\n  FlexboxProps,\n  layout,\n  LayoutProps,\n  opacity,\n  OpacityProps,\n  position,\n  PositionProps,\n  space,\n  SpaceProps,\n  typography,\n  TypographyProps,\n  textStyle,\n  colorStyle,\n  TextStyleProps,\n  ColorStyleProps,\n  ButtonStyleProps,\n  variant,\n} from 'styled-system'\n\nexport type BoxProps = BackgroundProps &\n  ButtonStyleProps &\n  ColorProps &\n  ColorStyleProps &\n  FlexboxProps &\n  LayoutProps &\n  OpacityProps &\n  PositionProps &\n  SpaceProps &\n  TextStyleProps &\n  TypographyProps &\n  HTMLAttributes<any>\n\nconst boxStyles = compose(\n  background,\n  color,\n  colorStyle,\n  flexbox,\n  layout,\n  opacity,\n  position,\n  space,\n  textStyle,\n  typography,\n  variant({\n    prop: 'variant',\n    scale: 'buttons',\n    variants: {\n      primary: {},\n    },\n  })\n)\n\nexport const Box = styled.div<BoxProps>(\n  {\n    boxSizing: 'border-box',\n  },\n  boxStyles\n)\n","import styled from 'styled-components'\nimport {\n  border,\n  BorderProps,\n  ShadowProps,\n  shadow,\n  compose,\n} from 'styled-system'\n\nimport { Box } from './Box'\n\nexport type CardProps = BorderProps & ShadowProps\n\nexport const Card = styled(Box)<CardProps>(compose(border, shadow))\n","import styled from 'styled-components'\nimport { style } from 'styled-system'\n\nimport { Box, BoxProps } from './Box'\n\ntype ColumnProps = Omit<BoxProps, 'width'> & {\n  col?: number | (number | null | string)[]\n  inset?: number | (number | null | string)[]\n}\n\nfunction transformValue(n: string | number) {\n  if (!n || isNaN(n as any)) {\n    return n\n  }\n\n  const cols = Number(n)\n  return (cols / 12) * 100 + '%'\n}\n\nconst inset = style({\n  prop: 'inset',\n  cssProperty: 'marginLeft',\n  transformValue,\n})\n\nconst col = style({\n  prop: 'col',\n  cssProperty: 'width',\n  transformValue,\n})\n\nexport const Column = styled(Box)<ColumnProps>`\n  ${col}\n  ${inset}\n`\n","import { ThemeContext } from 'styled-components'\nimport { DisplayProps, HeightProps } from 'styled-system'\nimport { Box } from './Box'\nimport { useContext } from 'react'\nimport * as React from 'react'\n\ntype ContainProps = DisplayProps & HeightProps\n\nexport const Contain: React.FC<ContainProps> = props => {\n  const themeContext = useContext(ThemeContext)\n\n  return (\n    <Box\n      mx=\"auto\"\n      px={\n        themeContext &&\n        themeContext.grid &&\n        themeContext.grid.container &&\n        themeContext.grid.container.padding\n      }\n      maxWidth={\n        themeContext &&\n        themeContext.grid &&\n        themeContext.grid.container &&\n        themeContext.grid.container.maxWidth\n      }\n      {...props}\n    />\n  )\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { FlexboxProps } from 'styled-system'\n\nimport { Box, BoxProps } from './Box'\n\nexport type FlexProps = BoxProps\n\nexport const FlexDocz: React.FC<FlexboxProps> = () => <div />\n\nexport const Flex = styled(Box)({})\n\nFlex.defaultProps = {\n  display: 'flex',\n}\n","import { HTMLAttributes } from 'react'\nimport styled, { css } from 'styled-components'\nimport { TypographyProps } from 'styled-system'\n\nimport { Box, BoxProps } from './Box'\n\nexport type TextProps = BoxProps &\n  TypographyProps &\n  HTMLAttributes<HTMLParagraphElement> &\n  HTMLAttributes<HTMLLabelElement> & {\n    as?:\n      | 'p'\n      | 'small'\n      | 'strong'\n      | 'em'\n      | 'span'\n      | 'h1'\n      | 'h2'\n      | 'h3'\n      | 'h4'\n      | 'h5'\n      | 'h6'\n      | 'label'\n    target?: string\n    singleLine?: boolean\n  }\n\nexport const Text = styled(Box)<TextProps>`\n  ${props =>\n    props.singleLine &&\n    css`\n      max-width: 100%;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    `}\n`\n\nText.defaultProps = {\n  as: 'span',\n}\n","import { HTMLAttributes } from 'react'\nimport styled from 'styled-components'\n\nimport { Text, TextProps } from './Text'\n\nexport type HeadingProps = TextProps &\n  HTMLAttributes<HTMLHeadingElement> & {\n    as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  }\n\nexport const Heading = styled(Text)<HeadingProps>({})\n\nHeading.defaultProps = {\n  as: 'h2',\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { space, SpaceProps } from 'styled-system'\n\nconst classnames = (...args: any[]) => args.join(' ')\nconst getClassName = (el: any) => (el.props && el.props.className) || ''\n\nexport const StyledChildren: React.FC<{ className?: string } & SpaceProps> = ({\n  className,\n  children,\n}) => {\n  const styledChildren = React.Children.toArray(children).map((child: any) =>\n    React.cloneElement(child, {\n      className: classnames(getClassName(child), className),\n    })\n  )\n  return <>{styledChildren}</>\n}\n\nexport const Space = styled(StyledChildren)(space)\n","import * as React from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { SpaceProps, WidthProps, FlexboxProps } from 'styled-system'\n\nimport { Flex } from './Flex'\nimport { Space } from './Space'\n\ninterface GutterProps {\n  gutter?: any[] | number\n}\n\ntype RowProps = FlexboxProps & GutterProps & SpaceProps & WidthProps\n\nexport const Row: React.FC<RowProps> = ({ gutter, children, ...props }) => {\n  const themeContext = React.useContext(ThemeContext)\n\n  if (!gutter && themeContext && themeContext.grid) {\n    gutter = themeContext.grid.gutter as number\n  }\n\n  if (!gutter) {\n    gutter = 15\n  }\n\n  const spacing =\n    gutter && Array.isArray(gutter)\n      ? gutter.map(space => space && space / 2)\n      : (gutter as number) / 2\n\n  const mx =\n    gutter && Array.isArray(gutter)\n      ? gutter.map(space => space && (space / 2) * -1)\n      : ((gutter as number) / 2) * -1\n\n  // const filteredChildren = React.Children.toArray(children).filter(Boolean)\n\n  return (\n    <Flex mx={mx} flexWrap=\"wrap\" {...props}>\n      <Space px={spacing}>{children}</Space>\n    </Flex>\n  )\n}\n","export interface ThemeGridContainer {\n  maxWidth: number\n  padding: number | any[]\n}\n\nexport interface ThemeGrid {\n  gutter: number | any[]\n  container: ThemeGridContainer\n}\n\nexport const defaultGrid = {\n  gutter: [15, null, 30],\n  container: {\n    maxWidth: 1280,\n    padding: [15, null, 60],\n  },\n}\n"],"names":["boxStyles","compose","background","color","colorStyle","flexbox","layout","opacity","position","space","textStyle","typography","variant","prop","scale","variants","primary","Box","styled","div","boxSizing","Card","border","shadow","transformValue","n","isNaN","cols","Number","inset","style","cssProperty","col","Column","Contain","props","themeContext","useContext","ThemeContext","React","mx","px","grid","container","padding","maxWidth","FlexDocz","Flex","defaultProps","display","Text","_templateObject","singleLine","css","as","Heading","classnames","args","join","getClassName","el","className","StyledChildren","children","styledChildren","toArray","map","child","Space","Row","gutter","spacing","Array","isArray","flexWrap","defaultGrid"],"mappings":"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"}